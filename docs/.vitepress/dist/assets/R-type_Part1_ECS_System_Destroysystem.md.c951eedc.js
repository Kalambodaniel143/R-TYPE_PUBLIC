import{_ as e,c as s,o as t,a as n}from"./app.9284d5bf.js";const g=JSON.parse('{"title":"DestroySystem \u2014 Syst\xE8me de gestion des collisions et destructions","description":"","frontmatter":{},"headers":[{"level":2,"title":"Fonctionnement interne","slug":"fonctionnement-interne","link":"#fonctionnement-interne","children":[{"level":3,"title":"\u{1F539} Boucle principale","slug":"\u{1F539}-boucle-principale","link":"#\u{1F539}-boucle-principale","children":[]},{"level":3,"title":"\u{1F539} Gestion des collisions","slug":"\u{1F539}-gestion-des-collisions","link":"#\u{1F539}-gestion-des-collisions","children":[]}]}],"relativePath":"R-type_Part1/ECS/System/Destroysystem.md"}'),o={name:"R-type_Part1/ECS/System/Destroysystem.md"},i=n(`<h1 id="destroysystem-\u2014-systeme-de-gestion-des-collisions-et-destructions" tabindex="-1">DestroySystem \u2014 Syst\xE8me de gestion des collisions et destructions <a class="header-anchor" href="#destroysystem-\u2014-systeme-de-gestion-des-collisions-et-destructions" aria-hidden="true">#</a></h1><p>Le <code>DestroySystem</code> fait partie du <strong>ECS (Entity Component System)</strong> du moteur.<br> Il est charg\xE9 de <strong>g\xE9rer les collisions entre entit\xE9s</strong> et d\u2019appliquer les effets associ\xE9s (d\xE9g\xE2ts, suppression d\u2019entit\xE9s, etc.).</p><p>Ce syst\xE8me agit sur les entit\xE9s disposant de <strong>composants de position</strong>, <strong>de vie</strong>, <strong>de tir</strong>, et <strong>de type (joueur/ennemi)</strong>.</p><hr><p>Le syst\xE8me exploite plusieurs composants enregistr\xE9s dans le <code>registry</code> :</p><table><thead><tr><th>Composant</th><th>R\xF4le</th></tr></thead><tbody><tr><td><code>LifeComponent</code></td><td>Contient le nombre de vies d\u2019une entit\xE9 (<code>getLives()</code>, <code>setLives()</code>).</td></tr><tr><td><code>FireComponent</code></td><td>Indique qu\u2019une entit\xE9 tire ou g\xE9n\xE8re un projectile.</td></tr><tr><td><code>ComputerComponent</code></td><td>Sert \xE0 distinguer les entit\xE9s contr\xF4l\xE9es par l\u2019IA (<code>Enemy</code>) ou non (<code>Player</code>).</td></tr><tr><td><code>PositionComponent</code></td><td>D\xE9finit la position de l\u2019entit\xE9 sur la carte (<code>x</code>, <code>y</code>).</td></tr></tbody></table><hr><h2 id="fonctionnement-interne" tabindex="-1">Fonctionnement interne <a class="header-anchor" href="#fonctionnement-interne" aria-hidden="true">#</a></h2><h3 id="\u{1F539}-boucle-principale" tabindex="-1">\u{1F539} Boucle principale <a class="header-anchor" href="#\u{1F539}-boucle-principale" aria-hidden="true">#</a></h3><p>Le syst\xE8me parcourt deux ensembles d\u2019entit\xE9s :</p><ol><li>Les <strong>entit\xE9s qui tirent</strong> (<code>FireComponent</code> + <code>ComputerComponent</code>).</li><li>Les <strong>entit\xE9s vivantes</strong> (<code>LifeComponent</code> + <code>PositionComponent</code>).</li></ol><p>Pour chaque entit\xE9 <strong>A</strong> qui tire (<code>i</code>) :</p><ul><li>Il v\xE9rifie les collisions avec toutes les entit\xE9s <strong>B</strong> (<code>j</code>) ayant un <code>LifeComponent</code>.</li><li>Si la distance entre leurs positions est inf\xE9rieure \xE0 un seuil (ici <strong>10 unit\xE9s</strong>), une collision est d\xE9tect\xE9e.</li></ul><h3 id="\u{1F539}-gestion-des-collisions" tabindex="-1">\u{1F539} Gestion des collisions <a class="header-anchor" href="#\u{1F539}-gestion-des-collisions" aria-hidden="true">#</a></h3><p>Lorsqu\u2019une collision est d\xE9tect\xE9e :</p><ol><li>Le <code>LifeComponent</code> de l\u2019entit\xE9 touch\xE9e (<code>j</code>) est d\xE9cr\xE9ment\xE9.</li><li>L\u2019entit\xE9 qui tire (<code>i</code>) est d\xE9truite via <code>r.kill_entity(i)</code>.</li><li>Si la vie de <code>j</code> tombe \xE0 0 ou moins, elle est \xE9galement d\xE9truite :<div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (life.</span><span style="color:#D2A8FF;">getLives</span><span style="color:#C9D1D9;">() </span><span style="color:#FF7B72;">&lt;=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    r.</span><span style="color:#D2A8FF;">kill_entity</span><span style="color:#C9D1D9;">(j);</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (life.</span><span style="color:#8250DF;">getLives</span><span style="color:#24292F;">() </span><span style="color:#CF222E;">&lt;=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">0</span><span style="color:#24292F;">)</span></span>
<span class="line"><span style="color:#24292F;">    r.</span><span style="color:#8250DF;">kill_entity</span><span style="color:#24292F;">(j);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ol>`,16),l=[i];function r(c,a,d,p,u,y){return t(),s("div",null,l)}const h=e(o,[["render",r]]);export{g as __pageData,h as default};
