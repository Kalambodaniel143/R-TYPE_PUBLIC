import{_ as s,c as n,o as a,a as e}from"./app.b41ca6dd.js";const y=JSON.parse('{"title":"R-Type - Build Guide","description":"","frontmatter":{},"headers":[{"level":2,"title":"Quick Start","slug":"quick-start","link":"#quick-start","children":[{"level":3,"title":"OptiUbuntu/Debian :","slug":"optiubuntu-debian","link":"#optiubuntu-debian","children":[]},{"level":3,"title":"Option 2 : Commandes manuelles","slug":"option-2-commandes-manuelles","link":"#option-2-commandes-manuelles","children":[]}]},{"level":2,"title":"Pr\xE9requis","slug":"prerequis","link":"#prerequis","children":[{"level":3,"title":"Outils requis","slug":"outils-requis","link":"#outils-requis","children":[]},{"level":3,"title":"Installation (une seule fois)","slug":"installation-une-seule-fois","link":"#installation-une-seule-fois","children":[]}]},{"level":2,"title":"Commandes de build","slug":"commandes-de-build","link":"#commandes-de-build","children":[{"level":3,"title":"Compilation Release (optimis\xE9e)","slug":"compilation-release-optimisee","link":"#compilation-release-optimisee","children":[]},{"level":3,"title":"Compilation Debug (avec symboles)","slug":"compilation-debug-avec-symboles","link":"#compilation-debug-avec-symboles","children":[]},{"level":3,"title":"Recompilation rapide (apr\xE8s modification de code)","slug":"recompilation-rapide-apres-modification-de-code","link":"#recompilation-rapide-apres-modification-de-code","children":[]},{"level":3,"title":"Rebuild complet (fclean + recompile)","slug":"rebuild-complet-fclean-recompile","link":"#rebuild-complet-fclean-recompile","children":[]},{"level":3,"title":"Nettoyage complet (fclean)","slug":"nettoyage-complet-fclean","link":"#nettoyage-complet-fclean","children":[]}]},{"level":2,"title":"Compilation s\xE9lective","slug":"compilation-selective","link":"#compilation-selective","children":[]},{"level":2,"title":"Structure du projet","slug":"structure-du-projet","link":"#structure-du-projet","children":[{"level":3,"title":"Fichiers CMake","slug":"fichiers-cmake","link":"#fichiers-cmake","children":[]},{"level":3,"title":"Fichiers Conan","slug":"fichiers-conan","link":"#fichiers-conan","children":[]},{"level":3,"title":"Binaires g\xE9n\xE9r\xE9s","slug":"binaires-generes","link":"#binaires-generes","children":[]}]},{"level":2,"title":"\u{1F527} D\xE9pendances (conanfile.txt)","slug":"\u{1F527}-dependances-conanfile-txt","link":"#\u{1F527}-dependances-conanfile-txt","children":[{"level":3,"title":"Biblioth\xE8ques utilis\xE9es","slug":"bibliotheques-utilisees","link":"#bibliotheques-utilisees","children":[]},{"level":3,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]}]},{"level":2,"title":"D\xE9pannage","slug":"depannage","link":"#depannage","children":[{"level":3,"title":"\\"conan: command not found\\"","slug":"conan-command-not-found","link":"#conan-command-not-found","children":[]},{"level":3,"title":"\\"externally-managed-environment\\" (Ubuntu 23.04+)","slug":"externally-managed-environment-ubuntu-23-04","link":"#externally-managed-environment-ubuntu-23-04","children":[]},{"level":3,"title":"\\"libudev-dev are missing\\" (Ubuntu/Debian)","slug":"libudev-dev-are-missing-ubuntu-debian","link":"#libudev-dev-are-missing-ubuntu-debian","children":[]},{"level":3,"title":"\\"libx11-xcb-dev, libfontenc-dev... are missing\\" (Ubuntu/Debian)","slug":"libx11-xcb-dev-libfontenc-dev-are-missing-ubuntu-debian","link":"#libx11-xcb-dev-libfontenc-dev-are-missing-ubuntu-debian","children":[]},{"level":3,"title":"GPG errors pendant apt update","slug":"gpg-errors-pendant-apt-update","link":"#gpg-errors-pendant-apt-update","children":[]},{"level":3,"title":"\\"GPG error\\" ou \\"repository not signed\\" (Ubuntu/Debian)","slug":"gpg-error-ou-repository-not-signed-ubuntu-debian","link":"#gpg-error-ou-repository-not-signed-ubuntu-debian","children":[]},{"level":3,"title":"\\"No CMAKE_BUILD_TYPE specified\\"","slug":"no-cmake-build-type-specified","link":"#no-cmake-build-type-specified","children":[]},{"level":3,"title":"Erreur de compilation","slug":"erreur-de-compilation","link":"#erreur-de-compilation","children":[]},{"level":3,"title":"Voir les logs d\xE9taill\xE9s","slug":"voir-les-logs-detailles","link":"#voir-les-logs-detailles","children":[]}]},{"level":2,"title":"Concepts cl\xE9s","slug":"concepts-cles","link":"#concepts-cles","children":[{"level":3,"title":"Script build.sh vs Commandes manuelles","slug":"script-build-sh-vs-commandes-manuelles","link":"#script-build-sh-vs-commandes-manuelles","children":[]},{"level":3,"title":"Pourquoi Conan ?","slug":"pourquoi-conan","link":"#pourquoi-conan","children":[]},{"level":3,"title":"Pourquoi CMake ?","slug":"pourquoi-cmake","link":"#pourquoi-cmake","children":[]},{"level":3,"title":"Build statique vs dynamique","slug":"build-statique-vs-dynamique","link":"#build-statique-vs-dynamique","children":[]},{"level":3,"title":"Binaires \xE0 la racine","slug":"binaires-a-la-racine","link":"#binaires-a-la-racine","children":[]}]},{"level":2,"title":"Workflow de d\xE9veloppement","slug":"workflow-de-developpement","link":"#workflow-de-developpement","children":[{"level":3,"title":"Avec le script build.sh (simple)","slug":"avec-le-script-build-sh-simple","link":"#avec-le-script-build-sh-simple","children":[]},{"level":3,"title":"Avec CMake (avanc\xE9)","slug":"avec-cmake-avance","link":"#avec-cmake-avance","children":[]}]},{"level":2,"title":"Pour aller plus loin","slug":"pour-aller-plus-loin","link":"#pour-aller-plus-loin","children":[]}],"relativePath":"R-type_Part1/Builder/index.md"}'),l={name:"R-type_Part1/Builder/index.md"},p=e(`<h1 id="r-type-build-guide" tabindex="-1">R-Type - Build Guide <a class="header-anchor" href="#r-type-build-guide" aria-hidden="true">#</a></h1><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-hidden="true">#</a></h2><h3 id="optiubuntu-debian" tabindex="-1">Opti<strong>Ubuntu/Debian :</strong> <a class="header-anchor" href="#optiubuntu-debian" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">sudo apt update</span></span>
<span class="line"><span style="color:#C9D1D9;">sudo apt install -y cmake g++ pip pipx libudev-dev libgl-dev \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcomposite-dev libxcursor-dev libx</span><span style="color:#FF7B72;">**</span><span style="color:#C9D1D9;">Solution - Installer tous les packages X11/Xorg requis :</span><span style="color:#FF7B72;">**</span></span>
<span class="line"><span style="color:#A5D6FF;">\`\`\`bash</span></span>
<span class="line"><span style="color:#A5D6FF;">sudo apt install -y \\</span></span>
<span class="line"><span style="color:#A5D6FF;">    libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev \\</span></span>
<span class="line"><span style="color:#A5D6FF;">    libxcomposite-dev libxcursor-dev libxdamage-dev libxrandr-dev libxi-dev libxinerama-dev \\</span></span>
<span class="line"><span style="color:#A5D6FF;">    libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxres-dev libxss-dev libxt-dev \\</span></span>
<span class="line"><span style="color:#A5D6FF;">    libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev \\</span></span>
<span class="line"><span style="color:#A5D6FF;">    libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev \\</span></span>
<span class="line"><span style="color:#A5D6FF;">    libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev \\</span></span>
<span class="line"><span style="color:#A5D6FF;">    libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-cursor-dev \\</span></span>
<span class="line"><span style="color:#A5D6FF;">    libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev \\</span></span>
<span class="line"><span style="color:#A5D6FF;">    libxcb-res0-dev libxcb-util-dev libxcb-util0-dev</span></span>
<span class="line"><span style="color:#A5D6FF;">\`\`\`</span><span style="color:#C9D1D9;">bxrandr-dev libxi-dev libxinerama-dev \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxres-dev libxss-dev libxt-dev \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-cursor-dev \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-res0-dev libxcb-util-dev libxcb-util0-dev</span></span>
<span class="line"><span style="color:#C9D1D9;">pipx install conan</span></span>
<span class="line"><span style="color:#C9D1D9;">pipx ensurepath</span></span>
<span class="line"><span style="color:#A5D6FF;">\`\`\`tomatique (recommand\xE9)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A5D6FF;">\`\`\`</span><span style="color:#C9D1D9;">bash</span></span>
<span class="line"><span style="color:#C9D1D9;">./build.sh        </span><span style="color:#8B949E;"># Compile le projet (installe cmake/conan si n\xE9cessaire)</span></span>
<span class="line"><span style="color:#C9D1D9;">./build.sh clean  </span><span style="color:#8B949E;"># Nettoie les binaires</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">sudo apt update</span></span>
<span class="line"><span style="color:#24292F;">sudo apt install -y cmake g++ pip pipx libudev-dev libgl-dev \\</span></span>
<span class="line"><span style="color:#24292F;">    libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev \\</span></span>
<span class="line"><span style="color:#24292F;">    libxcomposite-dev libxcursor-dev libx</span><span style="color:#CF222E;">**</span><span style="color:#24292F;">Solution - Installer tous les packages X11/Xorg requis :</span><span style="color:#CF222E;">**</span></span>
<span class="line"><span style="color:#0A3069;">\`\`\`bash</span></span>
<span class="line"><span style="color:#0A3069;">sudo apt install -y \\</span></span>
<span class="line"><span style="color:#0A3069;">    libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev \\</span></span>
<span class="line"><span style="color:#0A3069;">    libxcomposite-dev libxcursor-dev libxdamage-dev libxrandr-dev libxi-dev libxinerama-dev \\</span></span>
<span class="line"><span style="color:#0A3069;">    libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxres-dev libxss-dev libxt-dev \\</span></span>
<span class="line"><span style="color:#0A3069;">    libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev \\</span></span>
<span class="line"><span style="color:#0A3069;">    libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev \\</span></span>
<span class="line"><span style="color:#0A3069;">    libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev \\</span></span>
<span class="line"><span style="color:#0A3069;">    libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-cursor-dev \\</span></span>
<span class="line"><span style="color:#0A3069;">    libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev \\</span></span>
<span class="line"><span style="color:#0A3069;">    libxcb-res0-dev libxcb-util-dev libxcb-util0-dev</span></span>
<span class="line"><span style="color:#0A3069;">\`\`\`</span><span style="color:#24292F;">bxrandr-dev libxi-dev libxinerama-dev \\</span></span>
<span class="line"><span style="color:#24292F;">    libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxres-dev libxss-dev libxt-dev \\</span></span>
<span class="line"><span style="color:#24292F;">    libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev \\</span></span>
<span class="line"><span style="color:#24292F;">    libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev \\</span></span>
<span class="line"><span style="color:#24292F;">    libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev \\</span></span>
<span class="line"><span style="color:#24292F;">    libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-cursor-dev \\</span></span>
<span class="line"><span style="color:#24292F;">    libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev \\</span></span>
<span class="line"><span style="color:#24292F;">    libxcb-res0-dev libxcb-util-dev libxcb-util0-dev</span></span>
<span class="line"><span style="color:#24292F;">pipx install conan</span></span>
<span class="line"><span style="color:#24292F;">pipx ensurepath</span></span>
<span class="line"><span style="color:#0A3069;">\`\`\`tomatique (recommand\xE9)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0A3069;">\`\`\`</span><span style="color:#24292F;">bash</span></span>
<span class="line"><span style="color:#24292F;">./build.sh        </span><span style="color:#6E7781;"># Compile le projet (installe cmake/conan si n\xE9cessaire)</span></span>
<span class="line"><span style="color:#24292F;">./build.sh clean  </span><span style="color:#6E7781;"># Nettoie les binaires</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="option-2-commandes-manuelles" tabindex="-1">Option 2 : Commandes manuelles <a class="header-anchor" href="#option-2-commandes-manuelles" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#8B949E;"># 1. Installer les d\xE9pendances</span></span>
<span class="line"><span style="color:#C9D1D9;">conan install </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> --output-folder=build --build=missing</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;"># 2. Configurer CMake</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake -S </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> -B build \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_BUILD_TYPE=Release</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;"># 3. Compiler</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake --build build -j</span><span style="color:#A5D6FF;">$(nproc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;"># Binaires g\xE9n\xE9r\xE9s \xE0 la racine :</span></span>
<span class="line"><span style="color:#C9D1D9;">./r-type_server                 </span><span style="color:#8B949E;"># Serveur</span></span>
<span class="line"><span style="color:#C9D1D9;">./r-type_client </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">ip</span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">port</span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;">     </span><span style="color:#8B949E;"># Client</span></span>
<span class="line"><span style="color:#C9D1D9;">./rtype_game                    </span><span style="color:#8B949E;"># Jeu standalone</span></span>
<span class="line"><span style="color:#C9D1D9;">./LibEngine/Systems/</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">.so        </span><span style="color:#8B949E;"># Plugins syst\xE8mes</span></span>
<span class="line"><span style="color:#C9D1D9;">./LibEngine/Backends/</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">.so       </span><span style="color:#8B949E;"># Plugins backends</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#6E7781;"># 1. Installer les d\xE9pendances</span></span>
<span class="line"><span style="color:#24292F;">conan install </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> --output-folder=build --build=missing</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E7781;"># 2. Configurer CMake</span></span>
<span class="line"><span style="color:#24292F;">cmake -S </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> -B build \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_BUILD_TYPE=Release</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E7781;"># 3. Compiler</span></span>
<span class="line"><span style="color:#24292F;">cmake --build build -j</span><span style="color:#0A3069;">$(nproc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E7781;"># Binaires g\xE9n\xE9r\xE9s \xE0 la racine :</span></span>
<span class="line"><span style="color:#24292F;">./r-type_server                 </span><span style="color:#6E7781;"># Serveur</span></span>
<span class="line"><span style="color:#24292F;">./r-type_client </span><span style="color:#CF222E;">&lt;</span><span style="color:#24292F;">ip</span><span style="color:#CF222E;">&gt;</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">&lt;</span><span style="color:#24292F;">port</span><span style="color:#CF222E;">&gt;</span><span style="color:#24292F;">     </span><span style="color:#6E7781;"># Client</span></span>
<span class="line"><span style="color:#24292F;">./rtype_game                    </span><span style="color:#6E7781;"># Jeu standalone</span></span>
<span class="line"><span style="color:#24292F;">./LibEngine/Systems/</span><span style="color:#CF222E;">*</span><span style="color:#24292F;">.so        </span><span style="color:#6E7781;"># Plugins syst\xE8mes</span></span>
<span class="line"><span style="color:#24292F;">./LibEngine/Backends/</span><span style="color:#CF222E;">*</span><span style="color:#24292F;">.so       </span><span style="color:#6E7781;"># Plugins backends</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><hr><h2 id="prerequis" tabindex="-1">Pr\xE9requis <a class="header-anchor" href="#prerequis" aria-hidden="true">#</a></h2><h3 id="outils-requis" tabindex="-1">Outils requis <a class="header-anchor" href="#outils-requis" aria-hidden="true">#</a></h3><ul><li><strong>CMake</strong> &gt;= 3.16</li><li><strong>Conan</strong> &gt;= 2.0</li><li><strong>GCC/Clang</strong> avec support C++17</li><li><strong>Git</strong></li></ul><h3 id="installation-une-seule-fois" tabindex="-1">Installation (une seule fois) <a class="header-anchor" href="#installation-une-seule-fois" aria-hidden="true">#</a></h3><p><strong>Fedora :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">sudo dnf install -y cmake gcc-c++ python3-pip git \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    systemd-devel mesa-libGL-devel libX11-devel libXrandr-devel libXi-devel</span></span>
<span class="line"><span style="color:#C9D1D9;">pip3 install conan</span></span>
<span class="line"><span style="color:#C9D1D9;">conan profile detect --force</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">sudo dnf install -y cmake gcc-c++ python3-pip git \\</span></span>
<span class="line"><span style="color:#24292F;">    systemd-devel mesa-libGL-devel libX11-devel libXrandr-devel libXi-devel</span></span>
<span class="line"><span style="color:#24292F;">pip3 install conan</span></span>
<span class="line"><span style="color:#24292F;">conan profile detect --force</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>Ubuntu/Debian :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">sudo apt update</span></span>
<span class="line"><span style="color:#C9D1D9;">sudo apt install -y cmake g++ pip pipx libudev-dev libgl-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcomposite-dev libxcursor-dev libxdamage-dev libxrandr-dev libxi-dev libxinerama-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxres-dev libxss-dev libxt-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-cursor-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-res0-dev</span></span>
<span class="line"><span style="color:#C9D1D9;">pipx install conan</span></span>
<span class="line"><span style="color:#C9D1D9;">pipx ensurepath</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">sudo apt update</span></span>
<span class="line"><span style="color:#24292F;">sudo apt install -y cmake g++ pip pipx libudev-dev libgl-dev </span></span>
<span class="line"><span style="color:#24292F;">    libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcomposite-dev libxcursor-dev libxdamage-dev libxrandr-dev libxi-dev libxinerama-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxres-dev libxss-dev libxt-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-cursor-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcb-res0-dev</span></span>
<span class="line"><span style="color:#24292F;">pipx install conan</span></span>
<span class="line"><span style="color:#24292F;">pipx ensurepath</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>Ou utiliser le script automatique :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">./build.sh  </span><span style="color:#8B949E;"># Installe tout automatiquement (recommand\xE9)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">./build.sh  </span><span style="color:#6E7781;"># Installe tout automatiquement (recommand\xE9)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><hr><h2 id="commandes-de-build" tabindex="-1">Commandes de build <a class="header-anchor" href="#commandes-de-build" aria-hidden="true">#</a></h2><h3 id="compilation-release-optimisee" tabindex="-1">Compilation Release (optimis\xE9e) <a class="header-anchor" href="#compilation-release-optimisee" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">conan install </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> --output-folder=build --build=missing</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake -S </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> -B build \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_BUILD_TYPE=Release</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake --build build -j</span><span style="color:#A5D6FF;">$(nproc)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">conan install </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> --output-folder=build --build=missing</span></span>
<span class="line"><span style="color:#24292F;">cmake -S </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> -B build \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_BUILD_TYPE=Release</span></span>
<span class="line"><span style="color:#24292F;">cmake --build build -j</span><span style="color:#0A3069;">$(nproc)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="compilation-debug-avec-symboles" tabindex="-1">Compilation Debug (avec symboles) <a class="header-anchor" href="#compilation-debug-avec-symboles" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">conan install </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> --output-folder=build --build=missing -s build_type=Debug</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake -S </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> -B build \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Debug/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_BUILD_TYPE=Debug</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake --build build -j</span><span style="color:#A5D6FF;">$(nproc)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">conan install </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> --output-folder=build --build=missing -s build_type=Debug</span></span>
<span class="line"><span style="color:#24292F;">cmake -S </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> -B build \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Debug/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_BUILD_TYPE=Debug</span></span>
<span class="line"><span style="color:#24292F;">cmake --build build -j</span><span style="color:#0A3069;">$(nproc)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="recompilation-rapide-apres-modification-de-code" tabindex="-1">Recompilation rapide (apr\xE8s modification de code) <a class="header-anchor" href="#recompilation-rapide-apres-modification-de-code" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">cmake --build build -j</span><span style="color:#A5D6FF;">$(nproc)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">cmake --build build -j</span><span style="color:#0A3069;">$(nproc)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="rebuild-complet-fclean-recompile" tabindex="-1">Rebuild complet (fclean + recompile) <a class="header-anchor" href="#rebuild-complet-fclean-recompile" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">cmake --build build --target re</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">cmake --build build --target re</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="nettoyage-complet-fclean" tabindex="-1">Nettoyage complet (fclean) <a class="header-anchor" href="#nettoyage-complet-fclean" aria-hidden="true">#</a></h3><p><strong>M\xE9thode 1 - Commande directe :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">rm -rf build/ r-type_server r-type_client rtype_game LibEngine/</span><span style="color:#FF7B72;">**</span><span style="color:#C9D1D9;">/</span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;">.so</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">rm -rf build/ r-type_server r-type_client rtype_game LibEngine/</span><span style="color:#CF222E;">**</span><span style="color:#24292F;">/</span><span style="color:#CF222E;">*</span><span style="color:#24292F;">.so</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p><strong>M\xE9thode 2 - Cible CMake :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">cmake --build build --target fclean</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">cmake --build build --target fclean</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p><strong>Ce qui est supprim\xE9 :</strong></p><ul><li><code>build/</code> - Dossier de compilation</li><li><code>r-type_server</code>, <code>r-type_client</code>, <code>rtype_game</code> - Binaires</li><li><code>LibEngine/**/*.so</code> - Tous les plugins</li><li><strong>Pr\xE9serve</strong> les dossiers sources et <code>CMakeLists.txt</code></li></ul><hr><h2 id="compilation-selective" tabindex="-1">Compilation s\xE9lective <a class="header-anchor" href="#compilation-selective" aria-hidden="true">#</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">cmake --build build --target r-type_server    </span><span style="color:#8B949E;"># Serveur seul</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake --build build --target r-type_client    </span><span style="color:#8B949E;"># Client seul</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake --build build --target rtype_game       </span><span style="color:#8B949E;"># Jeu standalone</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake --build build --target plugins          </span><span style="color:#8B949E;"># Tous les plugins</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">cmake --build build --target r-type_server    </span><span style="color:#6E7781;"># Serveur seul</span></span>
<span class="line"><span style="color:#24292F;">cmake --build build --target r-type_client    </span><span style="color:#6E7781;"># Client seul</span></span>
<span class="line"><span style="color:#24292F;">cmake --build build --target rtype_game       </span><span style="color:#6E7781;"># Jeu standalone</span></span>
<span class="line"><span style="color:#24292F;">cmake --build build --target plugins          </span><span style="color:#6E7781;"># Tous les plugins</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><hr><h2 id="structure-du-projet" tabindex="-1">Structure du projet <a class="header-anchor" href="#structure-du-projet" aria-hidden="true">#</a></h2><h3 id="fichiers-cmake" tabindex="-1">Fichiers CMake <a class="header-anchor" href="#fichiers-cmake" aria-hidden="true">#</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#c9d1d9;">CMakeLists.txt                  # Configuration principale</span></span>
<span class="line"><span style="color:#c9d1d9;">\u251C\u2500\u2500 GameEngine/CMakeLists.txt   # Biblioth\xE8que ECS (game_engine)</span></span>
<span class="line"><span style="color:#c9d1d9;">\u251C\u2500\u2500 RType-Game/CMakeLists.txt   # Logique du jeu (rtype_game_lib)</span></span>
<span class="line"><span style="color:#c9d1d9;">\u251C\u2500\u2500 Networking/CMakeLists.txt   # Serveur et client r\xE9seau</span></span>
<span class="line"><span style="color:#c9d1d9;">\u251C\u2500\u2500 Client/CMakeLists.txt       # Jeu standalone</span></span>
<span class="line"><span style="color:#c9d1d9;">\u2514\u2500\u2500 LibEngine/CMakeLists.txt    # Plugins (.so)</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292f;">CMakeLists.txt                  # Configuration principale</span></span>
<span class="line"><span style="color:#24292f;">\u251C\u2500\u2500 GameEngine/CMakeLists.txt   # Biblioth\xE8que ECS (game_engine)</span></span>
<span class="line"><span style="color:#24292f;">\u251C\u2500\u2500 RType-Game/CMakeLists.txt   # Logique du jeu (rtype_game_lib)</span></span>
<span class="line"><span style="color:#24292f;">\u251C\u2500\u2500 Networking/CMakeLists.txt   # Serveur et client r\xE9seau</span></span>
<span class="line"><span style="color:#24292f;">\u251C\u2500\u2500 Client/CMakeLists.txt       # Jeu standalone</span></span>
<span class="line"><span style="color:#24292f;">\u2514\u2500\u2500 LibEngine/CMakeLists.txt    # Plugins (.so)</span></span>
<span class="line"><span style="color:#24292f;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="fichiers-conan" tabindex="-1">Fichiers Conan <a class="header-anchor" href="#fichiers-conan" aria-hidden="true">#</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#c9d1d9;">conanfile.txt                   # D\xE9pendances du projet</span></span>
<span class="line"><span style="color:#c9d1d9;">CMakeUserPresets.json           # G\xE9n\xE9r\xE9 par Conan (local, .gitignore)</span></span>
<span class="line"><span style="color:#c9d1d9;">build/build/Release/generators/ # Fichiers CMake g\xE9n\xE9r\xE9s par Conan</span></span>
<span class="line"><span style="color:#c9d1d9;">    \u251C\u2500\u2500 conan_toolchain.cmake</span></span>
<span class="line"><span style="color:#c9d1d9;">    \u251C\u2500\u2500 BoostConfig.cmake</span></span>
<span class="line"><span style="color:#c9d1d9;">    \u251C\u2500\u2500 SFMLConfig.cmake</span></span>
<span class="line"><span style="color:#c9d1d9;">    \u2514\u2500\u2500 ...</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292f;">conanfile.txt                   # D\xE9pendances du projet</span></span>
<span class="line"><span style="color:#24292f;">CMakeUserPresets.json           # G\xE9n\xE9r\xE9 par Conan (local, .gitignore)</span></span>
<span class="line"><span style="color:#24292f;">build/build/Release/generators/ # Fichiers CMake g\xE9n\xE9r\xE9s par Conan</span></span>
<span class="line"><span style="color:#24292f;">    \u251C\u2500\u2500 conan_toolchain.cmake</span></span>
<span class="line"><span style="color:#24292f;">    \u251C\u2500\u2500 BoostConfig.cmake</span></span>
<span class="line"><span style="color:#24292f;">    \u251C\u2500\u2500 SFMLConfig.cmake</span></span>
<span class="line"><span style="color:#24292f;">    \u2514\u2500\u2500 ...</span></span>
<span class="line"><span style="color:#24292f;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="binaires-generes" tabindex="-1">Binaires g\xE9n\xE9r\xE9s <a class="header-anchor" href="#binaires-generes" aria-hidden="true">#</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#c9d1d9;">r-type_server                   # Serveur de jeu (628 KB)</span></span>
<span class="line"><span style="color:#c9d1d9;">r-type_client                   # Client r\xE9seau (568 KB)</span></span>
<span class="line"><span style="color:#c9d1d9;">rtype_game                      # Jeu standalone (170 KB)</span></span>
<span class="line"><span style="color:#c9d1d9;">LibEngine/</span></span>
<span class="line"><span style="color:#c9d1d9;">\u251C\u2500\u2500 Backends/</span></span>
<span class="line"><span style="color:#c9d1d9;">\u2502   \u2514\u2500\u2500 sfml_backend.so         # Backend graphique SFML (2.5 MB)</span></span>
<span class="line"><span style="color:#c9d1d9;">\u2514\u2500\u2500 Systems/</span></span>
<span class="line"><span style="color:#c9d1d9;">    \u251C\u2500\u2500 render_system.so        # Syst\xE8me de rendu (179 KB)</span></span>
<span class="line"><span style="color:#c9d1d9;">    \u251C\u2500\u2500 input_system.so         # Syst\xE8me d&#39;entr\xE9es (39 KB)</span></span>
<span class="line"><span style="color:#c9d1d9;">    \u251C\u2500\u2500 physics_system.so       # Syst\xE8me physique (27 KB)</span></span>
<span class="line"><span style="color:#c9d1d9;">    \u2514\u2500\u2500 collision_system.so     # Syst\xE8me de collision (27 KB)</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292f;">r-type_server                   # Serveur de jeu (628 KB)</span></span>
<span class="line"><span style="color:#24292f;">r-type_client                   # Client r\xE9seau (568 KB)</span></span>
<span class="line"><span style="color:#24292f;">rtype_game                      # Jeu standalone (170 KB)</span></span>
<span class="line"><span style="color:#24292f;">LibEngine/</span></span>
<span class="line"><span style="color:#24292f;">\u251C\u2500\u2500 Backends/</span></span>
<span class="line"><span style="color:#24292f;">\u2502   \u2514\u2500\u2500 sfml_backend.so         # Backend graphique SFML (2.5 MB)</span></span>
<span class="line"><span style="color:#24292f;">\u2514\u2500\u2500 Systems/</span></span>
<span class="line"><span style="color:#24292f;">    \u251C\u2500\u2500 render_system.so        # Syst\xE8me de rendu (179 KB)</span></span>
<span class="line"><span style="color:#24292f;">    \u251C\u2500\u2500 input_system.so         # Syst\xE8me d&#39;entr\xE9es (39 KB)</span></span>
<span class="line"><span style="color:#24292f;">    \u251C\u2500\u2500 physics_system.so       # Syst\xE8me physique (27 KB)</span></span>
<span class="line"><span style="color:#24292f;">    \u2514\u2500\u2500 collision_system.so     # Syst\xE8me de collision (27 KB)</span></span>
<span class="line"><span style="color:#24292f;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><hr><h2 id="\u{1F527}-dependances-conanfile-txt" tabindex="-1">\u{1F527} D\xE9pendances (conanfile.txt) <a class="header-anchor" href="#\u{1F527}-dependances-conanfile-txt" aria-hidden="true">#</a></h2><h3 id="bibliotheques-utilisees" tabindex="-1">Biblioth\xE8ques utilis\xE9es <a class="header-anchor" href="#bibliotheques-utilisees" aria-hidden="true">#</a></h3><ul><li><strong>Boost 1.84.0</strong> - R\xE9seau (Asio), threads, syst\xE8me</li><li><strong>SFML 2.6.1</strong> - Graphique (fen\xEAtre, sprites, textures)</li><li><strong>LZ4 1.9.4</strong> - Compression rapide des paquets</li><li><strong>Zlib 1.3.1</strong> - Compression standard</li></ul><h3 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h3><div class="language-ini line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#FFA657;">[requires]</span></span>
<span class="line"><span style="color:#C9D1D9;">boost/1.84.0</span></span>
<span class="line"><span style="color:#C9D1D9;">sfml/2.6.1</span></span>
<span class="line"><span style="color:#C9D1D9;">lz4/1.9.4</span></span>
<span class="line"><span style="color:#C9D1D9;">zlib/1.3.1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFA657;">[generators]</span></span>
<span class="line"><span style="color:#C9D1D9;">CMakeDeps         </span><span style="color:#8B949E;"># G\xE9n\xE8re *Config.cmake pour find_package()</span></span>
<span class="line"><span style="color:#C9D1D9;">CMakeToolchain    </span><span style="color:#8B949E;"># G\xE9n\xE8re conan_toolchain.cmake</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFA657;">[options]</span></span>
<span class="line"><span style="color:#C9D1D9;">boost/*:</span><span style="color:#FF7B72;">shared</span><span style="color:#C9D1D9;">=False        </span><span style="color:#8B949E;"># Biblioth\xE8ques statiques</span></span>
<span class="line"><span style="color:#C9D1D9;">sfml/*:</span><span style="color:#FF7B72;">shared</span><span style="color:#C9D1D9;">=False</span></span>
<span class="line"><span style="color:#C9D1D9;">sfml/*:</span><span style="color:#FF7B72;">graphics</span><span style="color:#C9D1D9;">=True        </span><span style="color:#8B949E;"># Active le module graphique</span></span>
<span class="line"><span style="color:#C9D1D9;">sfml/*:</span><span style="color:#FF7B72;">window</span><span style="color:#C9D1D9;">=True          </span><span style="color:#8B949E;"># Active le module fen\xEAtre</span></span>
<span class="line"><span style="color:#C9D1D9;">sfml/*:</span><span style="color:#FF7B72;">audio</span><span style="color:#C9D1D9;">=True           </span><span style="color:#8B949E;"># Active le module audio</span></span>
<span class="line"><span style="color:#C9D1D9;">sfml/*:</span><span style="color:#FF7B72;">network</span><span style="color:#C9D1D9;">=False        </span><span style="color:#8B949E;"># D\xE9sactive (on utilise Boost.Asio)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFA657;">[layout]</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake_layout                </span><span style="color:#8B949E;"># Organisation standard CMake</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#953800;">[requires]</span></span>
<span class="line"><span style="color:#24292F;">boost/1.84.0</span></span>
<span class="line"><span style="color:#24292F;">sfml/2.6.1</span></span>
<span class="line"><span style="color:#24292F;">lz4/1.9.4</span></span>
<span class="line"><span style="color:#24292F;">zlib/1.3.1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#953800;">[generators]</span></span>
<span class="line"><span style="color:#24292F;">CMakeDeps         </span><span style="color:#6E7781;"># G\xE9n\xE8re *Config.cmake pour find_package()</span></span>
<span class="line"><span style="color:#24292F;">CMakeToolchain    </span><span style="color:#6E7781;"># G\xE9n\xE8re conan_toolchain.cmake</span></span>
<span class="line"></span>
<span class="line"><span style="color:#953800;">[options]</span></span>
<span class="line"><span style="color:#24292F;">boost/*:</span><span style="color:#CF222E;">shared</span><span style="color:#24292F;">=False        </span><span style="color:#6E7781;"># Biblioth\xE8ques statiques</span></span>
<span class="line"><span style="color:#24292F;">sfml/*:</span><span style="color:#CF222E;">shared</span><span style="color:#24292F;">=False</span></span>
<span class="line"><span style="color:#24292F;">sfml/*:</span><span style="color:#CF222E;">graphics</span><span style="color:#24292F;">=True        </span><span style="color:#6E7781;"># Active le module graphique</span></span>
<span class="line"><span style="color:#24292F;">sfml/*:</span><span style="color:#CF222E;">window</span><span style="color:#24292F;">=True          </span><span style="color:#6E7781;"># Active le module fen\xEAtre</span></span>
<span class="line"><span style="color:#24292F;">sfml/*:</span><span style="color:#CF222E;">audio</span><span style="color:#24292F;">=True           </span><span style="color:#6E7781;"># Active le module audio</span></span>
<span class="line"><span style="color:#24292F;">sfml/*:</span><span style="color:#CF222E;">network</span><span style="color:#24292F;">=False        </span><span style="color:#6E7781;"># D\xE9sactive (on utilise Boost.Asio)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#953800;">[layout]</span></span>
<span class="line"><span style="color:#24292F;">cmake_layout                </span><span style="color:#6E7781;"># Organisation standard CMake</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><hr><h2 id="depannage" tabindex="-1">D\xE9pannage <a class="header-anchor" href="#depannage" aria-hidden="true">#</a></h2><h3 id="conan-command-not-found" tabindex="-1">&quot;conan: command not found&quot; <a class="header-anchor" href="#conan-command-not-found" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">pip install conan</span></span>
<span class="line"><span style="color:#C9D1D9;">conan profile detect --force</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">pip install conan</span></span>
<span class="line"><span style="color:#24292F;">conan profile detect --force</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="externally-managed-environment-ubuntu-23-04" tabindex="-1">&quot;externally-managed-environment&quot; (Ubuntu 23.04+) <a class="header-anchor" href="#externally-managed-environment-ubuntu-23-04" aria-hidden="true">#</a></h3><p><strong>Erreur compl\xE8te :</strong></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#c9d1d9;">error: externally-managed-environment</span></span>
<span class="line"><span style="color:#c9d1d9;">This environment is externally managed</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292f;">error: externally-managed-environment</span></span>
<span class="line"><span style="color:#24292f;">This environment is externally managed</span></span>
<span class="line"><span style="color:#24292f;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>Solution 1 - Utiliser pipx (recommand\xE9) :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">sudo apt install pipx</span></span>
<span class="line"><span style="color:#C9D1D9;">pipx install conan</span></span>
<span class="line"><span style="color:#C9D1D9;">pipx ensurepath</span></span>
<span class="line"><span style="color:#8B949E;"># Fermer et rouvrir le terminal</span></span>
<span class="line"><span style="color:#C9D1D9;">conan profile detect --force</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">sudo apt install pipx</span></span>
<span class="line"><span style="color:#24292F;">pipx install conan</span></span>
<span class="line"><span style="color:#24292F;">pipx ensurepath</span></span>
<span class="line"><span style="color:#6E7781;"># Fermer et rouvrir le terminal</span></span>
<span class="line"><span style="color:#24292F;">conan profile detect --force</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>Solution 2 - Forcer pip (non recommand\xE9) :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">pip3 install conan --break-system-packages</span></span>
<span class="line"><span style="color:#C9D1D9;">conan profile detect --force</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">pip3 install conan --break-system-packages</span></span>
<span class="line"><span style="color:#24292F;">conan profile detect --force</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>Solution 3 - Utiliser le script (automatique) :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">./build.sh  </span><span style="color:#8B949E;"># G\xE8re automatiquement pipx ou pip</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">./build.sh  </span><span style="color:#6E7781;"># G\xE8re automatiquement pipx ou pip</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="libudev-dev-are-missing-ubuntu-debian" tabindex="-1">&quot;libudev-dev are missing&quot; (Ubuntu/Debian) <a class="header-anchor" href="#libudev-dev-are-missing-ubuntu-debian" aria-hidden="true">#</a></h3><p><strong>Erreur compl\xE8te :</strong></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#c9d1d9;">System requirements: &#39;libudev-dev&#39; are missing but can&#39;t install because tools.system.package_manager:mode is &#39;check&#39;.</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292f;">System requirements: &#39;libudev-dev&#39; are missing but can&#39;t install because tools.system.package_manager:mode is &#39;check&#39;.</span></span>
<span class="line"><span style="color:#24292f;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p><strong>Solution :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">sudo apt install -y libudev-dev libgl-dev libx11-dev libxrandr-dev libxi-dev</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">sudo apt install -y libudev-dev libgl-dev libx11-dev libxrandr-dev libxi-dev</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="libx11-xcb-dev-libfontenc-dev-are-missing-ubuntu-debian" tabindex="-1">&quot;libx11-xcb-dev, libfontenc-dev... are missing&quot; (Ubuntu/Debian) <a class="header-anchor" href="#libx11-xcb-dev-libfontenc-dev-are-missing-ubuntu-debian" aria-hidden="true">#</a></h3><p><strong>Erreur compl\xE8te :</strong></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#c9d1d9;">ERROR: xorg/system: System requirements: &#39;libx11-xcb-dev, libfontenc-dev, libice-dev...&#39; are missing</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292f;">ERROR: xorg/system: System requirements: &#39;libx11-xcb-dev, libfontenc-dev, libice-dev...&#39; are missing</span></span>
<span class="line"><span style="color:#24292f;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p><strong>Solution - Installer tous les packages X11/Xorg requis :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">sudo apt install -y </span></span>
<span class="line"><span style="color:#C9D1D9;">    libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcomposite-dev libxcursor-dev libxdamage-dev libxrandr-dev libxi-dev libxinerama-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxres-dev libxss-dev libxt-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-cursor-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev </span></span>
<span class="line"><span style="color:#C9D1D9;">    libxcb-res0-dev</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">sudo apt install -y </span></span>
<span class="line"><span style="color:#24292F;">    libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcomposite-dev libxcursor-dev libxdamage-dev libxrandr-dev libxi-dev libxinerama-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxres-dev libxss-dev libxt-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-cursor-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev </span></span>
<span class="line"><span style="color:#24292F;">    libxcb-res0-dev</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>Ou utiliser le script (automatique) :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">./build.sh  </span><span style="color:#8B949E;"># Installe automatiquement tous les packages requis</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">./build.sh  </span><span style="color:#6E7781;"># Installe automatiquement tous les packages requis</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="gpg-errors-pendant-apt-update" tabindex="-1">GPG errors pendant apt update <a class="header-anchor" href="#gpg-errors-pendant-apt-update" aria-hidden="true">#</a></h3><h3 id="gpg-error-ou-repository-not-signed-ubuntu-debian" tabindex="-1">&quot;GPG error&quot; ou &quot;repository not signed&quot; (Ubuntu/Debian) <a class="header-anchor" href="#gpg-error-ou-repository-not-signed-ubuntu-debian" aria-hidden="true">#</a></h3><p><strong>Erreur :</strong></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#c9d1d9;">GPG error: The following signatures couldn&#39;t be verified</span></span>
<span class="line"><span style="color:#c9d1d9;">The repository is not signed</span></span>
<span class="line"><span style="color:#c9d1d9;"></span></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292f;">GPG error: The following signatures couldn&#39;t be verified</span></span>
<span class="line"><span style="color:#24292f;">The repository is not signed</span></span>
<span class="line"><span style="color:#24292f;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>Solution 1 - Ignorer temporairement (pour <a href="http://build.sh" target="_blank" rel="noreferrer">build.sh</a>) :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">sudo apt update --allow-releaseinfo-change</span></span>
<span class="line"><span style="color:#8B949E;"># ou</span></span>
<span class="line"><span style="color:#C9D1D9;">sudo apt update -o Acquire::AllowInsecureRepositories=true</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">sudo apt update --allow-releaseinfo-change</span></span>
<span class="line"><span style="color:#6E7781;"># ou</span></span>
<span class="line"><span style="color:#24292F;">sudo apt update -o Acquire::AllowInsecureRepositories=true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>Solution 2 - D\xE9sactiver le d\xE9p\xF4t probl\xE9matique :</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#8B949E;"># Lister les d\xE9p\xF4ts</span></span>
<span class="line"><span style="color:#C9D1D9;">ls /etc/apt/sources.list.d/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;"># D\xE9sactiver le d\xE9p\xF4t VirtualBox (exemple)</span></span>
<span class="line"><span style="color:#C9D1D9;">sudo mv /etc/apt/sources.list.d/virtualbox.list /etc/apt/sources.list.d/virtualbox.list.disabled</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;"># Puis r\xE9essayer</span></span>
<span class="line"><span style="color:#C9D1D9;">sudo apt update</span></span>
<span class="line"><span style="color:#C9D1D9;">./build.sh</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#6E7781;"># Lister les d\xE9p\xF4ts</span></span>
<span class="line"><span style="color:#24292F;">ls /etc/apt/sources.list.d/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E7781;"># D\xE9sactiver le d\xE9p\xF4t VirtualBox (exemple)</span></span>
<span class="line"><span style="color:#24292F;">sudo mv /etc/apt/sources.list.d/virtualbox.list /etc/apt/sources.list.d/virtualbox.list.disabled</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E7781;"># Puis r\xE9essayer</span></span>
<span class="line"><span style="color:#24292F;">sudo apt update</span></span>
<span class="line"><span style="color:#24292F;">./build.sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="no-cmake-build-type-specified" tabindex="-1">&quot;No CMAKE_BUILD_TYPE specified&quot; <a class="header-anchor" href="#no-cmake-build-type-specified" aria-hidden="true">#</a></h3><p>Toujours sp\xE9cifier <code>-DCMAKE_BUILD_TYPE=Release</code> ou <code>Debug</code> :</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">cmake -S </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> -B build \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_BUILD_TYPE=Release  </span><span style="color:#8B949E;"># \u2190 OBLIGATOIRE</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">cmake -S </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> -B build \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_BUILD_TYPE=Release  </span><span style="color:#6E7781;"># \u2190 OBLIGATOIRE</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="erreur-de-compilation" tabindex="-1">Erreur de compilation <a class="header-anchor" href="#erreur-de-compilation" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#8B949E;"># Nettoyer et recompiler</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake --build build --target fclean</span></span>
<span class="line"><span style="color:#C9D1D9;">conan install </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> --output-folder=build --build=missing</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake -S </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> -B build \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_BUILD_TYPE=Release</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake --build build -j</span><span style="color:#A5D6FF;">$(nproc)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#6E7781;"># Nettoyer et recompiler</span></span>
<span class="line"><span style="color:#24292F;">cmake --build build --target fclean</span></span>
<span class="line"><span style="color:#24292F;">conan install </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> --output-folder=build --build=missing</span></span>
<span class="line"><span style="color:#24292F;">cmake -S </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> -B build \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_BUILD_TYPE=Release</span></span>
<span class="line"><span style="color:#24292F;">cmake --build build -j</span><span style="color:#0A3069;">$(nproc)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="voir-les-logs-detailles" tabindex="-1">Voir les logs d\xE9taill\xE9s <a class="header-anchor" href="#voir-les-logs-detailles" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">cmake --build build --verbose</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">cmake --build build --verbose</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><hr><h2 id="concepts-cles" tabindex="-1">Concepts cl\xE9s <a class="header-anchor" href="#concepts-cles" aria-hidden="true">#</a></h2><h3 id="script-build-sh-vs-commandes-manuelles" tabindex="-1">Script <a href="http://build.sh" target="_blank" rel="noreferrer">build.sh</a> vs Commandes manuelles <a class="header-anchor" href="#script-build-sh-vs-commandes-manuelles" aria-hidden="true">#</a></h3><p><strong><a href="http://build.sh" target="_blank" rel="noreferrer">build.sh</a></strong> : Script minimal pour simplifier le build</p><ul><li>Installe automatiquement cmake et conan si manquants</li><li>Une seule commande : <code>./build.sh</code></li><li>Nettoyage simple : <code>./build.sh clean</code></li><li>Id\xE9al pour d\xE9buter ou d\xE9ployer rapidement</li><li>Moins de contr\xF4le (toujours en Release)</li></ul><p><strong>Commandes CMake</strong> : Contr\xF4le total</p><ul><li>Choix du build type (Release/Debug)</li><li>Compilation s\xE9lective (targets sp\xE9cifiques)</li><li>Plus de flexibilit\xE9</li><li>Plus de commandes \xE0 m\xE9moriser</li></ul><p><strong>Recommandation</strong> : Utilise <code>build.sh</code> pour d\xE9buter, passe \xE0 CMake quand tu veux plus de contr\xF4le.</p><h3 id="pourquoi-conan" tabindex="-1">Pourquoi Conan ? <a class="header-anchor" href="#pourquoi-conan" aria-hidden="true">#</a></h3><ul><li>Gestion automatique des d\xE9pendances (Boost, SFML, etc.)</li><li>Multi-plateforme (Linux, Windows, macOS)</li><li>Pas besoin d&#39;installer manuellement les biblioth\xE8ques</li><li>Versions sp\xE9cifiques garanties</li></ul><h3 id="pourquoi-cmake" tabindex="-1">Pourquoi CMake ? <a class="header-anchor" href="#pourquoi-cmake" aria-hidden="true">#</a></h3><ul><li>Standard de l&#39;industrie C++</li><li>Multi-plateforme</li><li>G\xE9n\xE9ration automatique de Makefiles</li><li>Int\xE9gration avec les IDEs (VS Code, CLion, etc.)</li></ul><h3 id="build-statique-vs-dynamique" tabindex="-1">Build statique vs dynamique <a class="header-anchor" href="#build-statique-vs-dynamique" aria-hidden="true">#</a></h3><p>Ce projet utilise des <strong>biblioth\xE8ques statiques</strong> (<code>shared=False</code>) :</p><ul><li>Binaires autonomes (pas de <code>.so</code> syst\xE8me requis)</li><li>D\xE9ploiement simplifi\xE9</li><li>Pas de probl\xE8mes de versions</li><li>Binaires plus gros</li></ul><h3 id="binaires-a-la-racine" tabindex="-1">Binaires \xE0 la racine <a class="header-anchor" href="#binaires-a-la-racine" aria-hidden="true">#</a></h3><p>Les binaires sont g\xE9n\xE9r\xE9s <strong>directement \xE0 la racine</strong> du projet (pas dans <code>build/bin/</code>) :</p><ul><li>Plus simple pour le d\xE9veloppement</li><li>Ex\xE9cution directe : <code>./r-type_server</code></li><li>Configuration dans <code>CMakeLists.txt</code> :<div class="language-cmake line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#FF7B72;">set</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">CMAKE_RUNTIME_OUTPUT_DIRECTORY</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">\${CMAKE_SOURCE_DIR}</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#CF222E;">set</span><span style="color:#24292F;">(</span><span style="color:#953800;">CMAKE_RUNTIME_OUTPUT_DIRECTORY</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">\${CMAKE_SOURCE_DIR}</span><span style="color:#24292F;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div></li></ul><hr><h2 id="workflow-de-developpement" tabindex="-1">Workflow de d\xE9veloppement <a class="header-anchor" href="#workflow-de-developpement" aria-hidden="true">#</a></h2><h3 id="avec-le-script-build-sh-simple" tabindex="-1">Avec le script <a href="http://build.sh" target="_blank" rel="noreferrer">build.sh</a> (simple) <a class="header-anchor" href="#avec-le-script-build-sh-simple" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#8B949E;"># Premier build</span></span>
<span class="line"><span style="color:#C9D1D9;">./build.sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;"># Apr\xE8s modification du code</span></span>
<span class="line"><span style="color:#C9D1D9;">./build.sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;"># Nettoyer</span></span>
<span class="line"><span style="color:#C9D1D9;">./build.sh clean</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#6E7781;"># Premier build</span></span>
<span class="line"><span style="color:#24292F;">./build.sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E7781;"># Apr\xE8s modification du code</span></span>
<span class="line"><span style="color:#24292F;">./build.sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E7781;"># Nettoyer</span></span>
<span class="line"><span style="color:#24292F;">./build.sh clean</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="avec-cmake-avance" tabindex="-1">Avec CMake (avanc\xE9) <a class="header-anchor" href="#avec-cmake-avance" aria-hidden="true">#</a></h3><h4 id="premier-build" tabindex="-1">Premier build <a class="header-anchor" href="#premier-build" aria-hidden="true">#</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">conan install </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> --output-folder=build --build=missing</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake -S </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> -B build \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_BUILD_TYPE=Release</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake --build build -j</span><span style="color:#A5D6FF;">$(nproc)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">conan install </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> --output-folder=build --build=missing</span></span>
<span class="line"><span style="color:#24292F;">cmake -S </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> -B build \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_BUILD_TYPE=Release</span></span>
<span class="line"><span style="color:#24292F;">cmake --build build -j</span><span style="color:#0A3069;">$(nproc)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="apres-modification-du-code" tabindex="-1">Apr\xE8s modification du code <a class="header-anchor" href="#apres-modification-du-code" aria-hidden="true">#</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">cmake --build build -j</span><span style="color:#A5D6FF;">$(nproc)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">cmake --build build -j</span><span style="color:#0A3069;">$(nproc)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h4 id="apres-modification-du-cmakelists-txt" tabindex="-1">Apr\xE8s modification du CMakeLists.txt <a class="header-anchor" href="#apres-modification-du-cmakelists-txt" aria-hidden="true">#</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">cmake -S </span><span style="color:#79C0FF;">.</span><span style="color:#C9D1D9;"> -B build \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#C9D1D9;">    -DCMAKE_BUILD_TYPE=Release</span></span>
<span class="line"><span style="color:#C9D1D9;">cmake --build build -j</span><span style="color:#A5D6FF;">$(nproc)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">cmake -S </span><span style="color:#0550AE;">.</span><span style="color:#24292F;"> -B build \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake \\</span></span>
<span class="line"><span style="color:#24292F;">    -DCMAKE_BUILD_TYPE=Release</span></span>
<span class="line"><span style="color:#24292F;">cmake --build build -j</span><span style="color:#0A3069;">$(nproc)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="avant-un-commit-propre" tabindex="-1">Avant un commit propre <a class="header-anchor" href="#avant-un-commit-propre" aria-hidden="true">#</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">cmake --build build --target fclean</span></span>
<span class="line"><span style="color:#8B949E;"># Les binaires et build/ sont dans .gitignore</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#24292F;">cmake --build build --target fclean</span></span>
<span class="line"><span style="color:#6E7781;"># Les binaires et build/ sont dans .gitignore</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><h2 id="pour-aller-plus-loin" tabindex="-1">Pour aller plus loin <a class="header-anchor" href="#pour-aller-plus-loin" aria-hidden="true">#</a></h2><ul><li><a href="https://cmake.org/documentation/" target="_blank" rel="noreferrer">CMake Documentation</a></li><li><a href="https://docs.conan.io/" target="_blank" rel="noreferrer">Conan Documentation</a></li><li><a href="https://www.boost.org/doc/libs/release/doc/html/boost_asio.html" target="_blank" rel="noreferrer">Boost.Asio</a></li><li><a href="https://www.sfml-dev.org/tutorials/" target="_blank" rel="noreferrer">SFML Tutorials</a></li></ul>`,125),i=[p];function c(o,r,t,d,b,u){return a(),n("div",null,i)}const v=s(l,[["render",c]]);export{y as __pageData,v as default};
