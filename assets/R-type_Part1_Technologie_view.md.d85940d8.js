import{_ as s,c as e,o as n,a}from"./app.419fa203.js";const F=JSON.parse('{"title":"\xC9tude comparative : View ECS vs parcours direct du Registry","description":"","frontmatter":{},"headers":[{"level":2,"title":"Et revue de la d\xE9finition des composants physiques et du PhysicsSystem","slug":"et-revue-de-la-definition-des-composants-physiques-et-du-physicssystem","link":"#et-revue-de-la-definition-des-composants-physiques-et-du-physicssystem","children":[{"level":3,"title":"R\xE9sum\xE9","slug":"resume","link":"#resume","children":[]}]},{"level":2,"title":"1. View vs parcours direct du Registry","slug":"_1-view-vs-parcours-direct-du-registry","link":"#_1-view-vs-parcours-direct-du-registry","children":[{"level":3,"title":"1.1 Objectif et ergonomie","slug":"_1-1-objectif-et-ergonomie","link":"#_1-1-objectif-et-ergonomie","children":[]}]}],"relativePath":"R-type_Part1/Technologie/view.md"}'),o={name:"R-type_Part1/Technologie/view.md"},l=a(`<h1 id="etude-comparative-view-ecs-vs-parcours-direct-du-registry" tabindex="-1">\xC9tude comparative : View ECS vs parcours direct du Registry <a class="header-anchor" href="#etude-comparative-view-ecs-vs-parcours-direct-du-registry" aria-hidden="true">#</a></h1><h2 id="et-revue-de-la-definition-des-composants-physiques-et-du-physicssystem" tabindex="-1">Et revue de la d\xE9finition des composants physiques et du PhysicsSystem <a class="header-anchor" href="#et-revue-de-la-definition-des-composants-physiques-et-du-physicssystem" aria-hidden="true">#</a></h2><h3 id="resume" tabindex="-1">R\xE9sum\xE9 <a class="header-anchor" href="#resume" aria-hidden="true">#</a></h3><ul><li><code>view&lt;...&gt;</code> filtre au <strong>compile-time</strong> et it\xE8re uniquement sur les entit\xE9s qui poss\xE8dent tous les composants requis.</li><li>Le parcours direct du registry impose soit de v\xE9rifier dynamiquement la pr\xE9sence des composants (<code>if/has</code>), soit d\u2019it\xE9rer plusieurs conteneurs et de les croiser manuellement.</li></ul><p>Cette note se base sur les fichiers :</p><ul><li><strong>View</strong> : <code>GameEngine/Registry/View.hpp</code></li><li><strong>PhysicsSystem</strong> : <code>GameEngine/Physics/Systems/PhysicsSystem.{hpp,cpp}</code></li><li><strong>Composants</strong> : <code>GameEngine/Physics/Components/{Movement.hpp, Physics.hpp}</code></li></ul><hr><h2 id="_1-view-vs-parcours-direct-du-registry" tabindex="-1">1. View vs parcours direct du Registry <a class="header-anchor" href="#_1-view-vs-parcours-direct-du-registry" aria-hidden="true">#</a></h2><h3 id="_1-1-objectif-et-ergonomie" tabindex="-1">1.1 Objectif et ergonomie <a class="header-anchor" href="#_1-1-objectif-et-ergonomie" aria-hidden="true">#</a></h3><ul><li><p><strong><code>view&lt;Components...&gt;</code> :</strong></p><ul><li>D\xE9clare au <em>compile-time</em> l\u2019ensemble des composants attendus.</li><li>Fournit une boucle claire :<div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;"> (</span><span style="color:#FF7B72;">auto</span><span style="color:#C9D1D9;"> e : </span><span style="color:#D2A8FF;">view</span><span style="color:#C9D1D9;">&lt;...&gt;(reg)) { ... }</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#CF222E;">for</span><span style="color:#24292F;"> (</span><span style="color:#CF222E;">auto</span><span style="color:#24292F;"> e : </span><span style="color:#8250DF;">view</span><span style="color:#24292F;">&lt;...&gt;(reg)) { ... }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div></li><li>Minimise le bruit de code (pas de <code>if (!has) return;</code>).</li></ul></li><li><p><strong>Parcours direct :</strong></p><ul><li>Implique souvent des tests dynamiques de pr\xE9sence des composants.</li><li>Plus verbeux et sujet \xE0 l\u2019oubli de v\xE9rifications.</li></ul></li></ul><h4 id="exemple-cote-a-cote" tabindex="-1">Exemple c\xF4t\xE9 \xE0 c\xF4te <a class="header-anchor" href="#exemple-cote-a-cote" aria-hidden="true">#</a></h4><p>Cas simple : int\xE9grer la vitesse dans la position.</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#8B949E;">// Avec view</span></span>
<span class="line"><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;"> (</span><span style="color:#FF7B72;">auto</span><span style="color:#C9D1D9;"> e : </span><span style="color:#D2A8FF;">view</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#FFA657;">PositionComponent</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">VelocityComponent</span><span style="color:#C9D1D9;">&gt;(reg)) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">auto&amp;</span><span style="color:#C9D1D9;"> pos </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> reg.get_components</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">PositionComponent</span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;">()[e];</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">auto&amp;</span><span style="color:#C9D1D9;"> vel </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> reg.get_components</span><span style="color:#FF7B72;">&lt;</span><span style="color:#C9D1D9;">VelocityComponent</span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;">()[e];</span></span>
<span class="line"><span style="color:#C9D1D9;">    pos.x </span><span style="color:#FF7B72;">+=</span><span style="color:#C9D1D9;"> vel.vx </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> dt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    pos.y </span><span style="color:#FF7B72;">+=</span><span style="color:#C9D1D9;"> vel.vy </span><span style="color:#FF7B72;">*</span><span style="color:#C9D1D9;"> dt;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#6E7781;">// Avec view</span></span>
<span class="line"><span style="color:#CF222E;">for</span><span style="color:#24292F;"> (</span><span style="color:#CF222E;">auto</span><span style="color:#24292F;"> e : </span><span style="color:#8250DF;">view</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">PositionComponent</span><span style="color:#24292F;">, </span><span style="color:#953800;">VelocityComponent</span><span style="color:#24292F;">&gt;(reg)) {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">auto&amp;</span><span style="color:#24292F;"> pos </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> reg.get_components</span><span style="color:#CF222E;">&lt;</span><span style="color:#24292F;">PositionComponent</span><span style="color:#CF222E;">&gt;</span><span style="color:#24292F;">()[e];</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">auto&amp;</span><span style="color:#24292F;"> vel </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> reg.get_components</span><span style="color:#CF222E;">&lt;</span><span style="color:#24292F;">VelocityComponent</span><span style="color:#CF222E;">&gt;</span><span style="color:#24292F;">()[e];</span></span>
<span class="line"><span style="color:#24292F;">    pos.x </span><span style="color:#CF222E;">+=</span><span style="color:#24292F;"> vel.vx </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> dt;</span></span>
<span class="line"><span style="color:#24292F;">    pos.y </span><span style="color:#CF222E;">+=</span><span style="color:#24292F;"> vel.vy </span><span style="color:#CF222E;">*</span><span style="color:#24292F;"> dt;</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,13),p=[l];function t(r,c,i,d,y,u){return n(),e("div",null,p)}const h=s(o,[["render",t]]);export{F as __pageData,h as default};
